{"version":3,"sources":["MovieList/MovieItem.js","MovieList/index.js","Movie/index.js","MovieForm/PersonSelect.js","MovieForm/index.js","PersonForm/index.js","PersonList/index.js","NavBar/index.js","App.js","serviceWorker.js","index.js"],"names":["MovieItem","_this$props","this","props","movie","onClick","onDelete","react_default","a","createElement","className","title","release_year","Component","MovieList","movies","onItemClick","onDeleteClick","items","map","index","src_MovieList_MovieItem","key","Movie","actorList","casting","actor","concat","first_name","last_name","join","producerList","producers","producer","directorList","directors","director","PersonSelect","e","person","preventDefault","onOptionSelect","name","person_id","id","_this","selectedPeople","options","people","selected","findIndex","opt","handleOnOptionSelect","initialMovieAttrs","movie_actors_attributes","movie_directors_attributes","movie_producers_attributes","MovieForm","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","onSubmit","setState","attr","target","getAttribute","value","objectSpread","defineProperty","relation","toConsumableArray","slice","selectedOption","removeFromRelationUsingIndex","addToRelation","_this2","_this$state$movie","onChange","changeMovieAttr","type","src_MovieForm_PersonSelect","handleOnOptionClick","bind","initialPersonAttrs","alias","PersonForm","_this$state$person","changePersonAttr","PersonList","NavBar","console","log","process","App","auth","fetch","method","then","response","json","_this3","refreshAuthToken","_this4","headers","Content-Type","Authorization","token","body","JSON","stringify","_this5","_this6","filter","m","_this7","_this$state","src_NavBar","src_MovieForm","movieAttrs","createMovie","src_PersonForm","personAttrs","createPerson","src_Movie","src_MovieList","selectMovie","deleteMovie","src_PersonList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0bf1bff8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './MovieItem.css';\n\nclass MovieItem extends Component {\n  render() {\n    const { movie, onClick, onDelete } = this.props;\n\n    return (\n      <div className=\"MovieItem\" onClick={ () => onClick(movie) }>\n        { movie.title } - { movie.release_year }\n        <div className=\"MovieItem-delete\" onClick={ () => onDelete(movie) }>\n          <i className=\"material-icons\">delete</i>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MovieItem;\n","import React, { Component } from 'react';\nimport MovieItem from './MovieItem';\n\nclass MovieList extends Component {\n  render() {\n    const { movies, onItemClick, onDeleteClick } = this.props;\n    const items = movies.map( (movie, index) => {\n      return <MovieItem key={index} movie={movie} onClick={onItemClick} onDelete={onDeleteClick}/>;\n    })\n\n    return (\n      <div className=\"MovieList\">\n        { items }\n      </div>\n    );\n  }\n}\n\nexport default MovieList;\n","import React, { Component } from 'react';\nimport './Movie.css';\n\nclass Movie extends Component {\n  render() {\n    const { movie } = this.props;\n\n    if(movie == null) return <div className=\"Movie\">No movie was selected</div>\n\n    const actorList = movie.casting.map( actor => `${actor.first_name} ${actor.last_name}` ).join(', ');\n    const producerList = movie.producers.map( producer => `${producer.first_name} ${producer.last_name}` ).join(', ');\n    const directorList = movie.directors.map( director => `${director.first_name} ${director.last_name}` ).join(', ');\n\n    return (\n      <div className=\"Movie\">\n        <h5>{ movie.title } - { movie.release_year }</h5>\n        Actors: { actorList }       <br />\n        Producers: { producerList } <br />\n        Directors: { directorList } <br />\n      </div>\n    );\n  }\n}\n\nexport default Movie;\n","import React, { Component } from 'react';\nimport './PersonSelect.css';\n\nclass PersonSelect extends Component {\n  handleOnOptionSelect(e, person) {\n    e.preventDefault();\n    this.props.onOptionSelect(this.props.name, {\n      person_id: person.id\n    })\n  }\n\n  render() {\n    const {selectedPeople, people} = this.props;\n    const options = people.map( (person, index) => {\n      const selected = selectedPeople.findIndex( (opt) => { return opt.person_id === person.id } )\n\n      return (\n        <div\n          key={index}\n          className={ selected >= 0 ? 'PersonSelect-option PersonSelect-option-selected' : 'PersonSelect-option' }\n          onClick={ (e) => this.handleOnOptionSelect(e, person) }\n        >\n          {person.first_name}\n        </div>\n      )\n    });\n\n    return (\n      <div className=\"PersonSelect\">\n        { options }\n      </div>\n    );\n  }\n}\n\nexport default PersonSelect;\n","import React, { Component } from 'react';\nimport './MovieForm.css';\nimport PersonSelect from './PersonSelect';\n\nconst initialMovieAttrs = {\n  movie_actors_attributes:    [],\n  movie_directors_attributes: [],\n  movie_producers_attributes: [],\n  release_year: '',\n  title: ''\n}\n\nclass MovieForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie: initialMovieAttrs\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    this.props.onSubmit(this.state.movie);\n    this.setState({ movie: initialMovieAttrs });\n  }\n\n  changeMovieAttr(e) {\n    const attr = e.target.getAttribute('name');\n    const value = e.target.value;\n\n    this.setState({\n      movie: {\n        ...this.state.movie, [attr]: value\n      }\n    })\n  }\n\n  addToRelation(relation, value) {\n    this.setState({\n      movie: {\n        ...this.state.movie,\n        [relation]: [ ...this.state.movie[relation], value ]\n      }\n    })\n  }\n\n  removeFromRelationUsingIndex(relation, index) {\n    this.setState({\n      movie: {\n        ...this.state.movie,\n        [relation]: [\n          ...this.state.movie[relation].slice(0, index - 1),\n          ...this.state.movie[relation].slice(index + 1)\n        ]\n      }\n    })\n  }\n\n  handleOnOptionClick(attr, selectedOption) {\n    const index = this.state.movie[attr].findIndex( (relation) => {\n      return relation.person_id === selectedOption.person_id\n    });\n\n    (index >= 0) ? this.removeFromRelationUsingIndex(attr, index) : this.addToRelation(attr, selectedOption)\n  }\n\n  render() {\n    const {\n      movie_actors_attributes,\n      movie_directors_attributes,\n      movie_producers_attributes,\n      release_year,\n      title\n    } = this.state.movie;\n    const { people } = this.props;\n\n    return (\n      <div className=\"MovieForm\">\n        <form onSubmit={ (e) => this.onSubmit(e) }>\n          <div className=\"input-field\">\n            <label>Title</label>\n            <input\n              name=\"title\"\n              value={title}\n              onChange={ (e) => this.changeMovieAttr(e) }\n            />\n          </div>\n\n          <div className=\"input-field\">\n            <label>Release Year</label>\n            <input\n              name=\"release_year\"\n              value={release_year}\n              type=\"number\"\n              onChange={ (e) => this.changeMovieAttr(e) }\n            />\n          </div>\n\n          <label>Actors/Actrisses</label>\n          <PersonSelect\n            onOptionSelect={ this.handleOnOptionClick.bind(this) }\n            name=\"movie_actors_attributes\"\n            people={people}\n            selectedPeople={ movie_actors_attributes }\n          />\n          <label>Directors</label>\n          <PersonSelect\n            onOptionSelect={ this.handleOnOptionClick.bind(this) }\n            name=\"movie_directors_attributes\"\n            people={people}\n            selectedPeople={ movie_directors_attributes }\n          />\n          <label>Producers</label>\n          <PersonSelect\n            onOptionSelect={ this.handleOnOptionClick.bind(this) }\n            name=\"movie_producers_attributes\"\n            people={people}\n            selectedPeople={ movie_producers_attributes }\n          />\n          <br></br>\n          <input type='submit' value=\"Create\" className=\"waves-effect waves-light btn\"/>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default MovieForm;\n","import React, { Component } from 'react';\n\nconst initialPersonAttrs = {\n  last_name: '',\n  first_name: '',\n  alias: ''\n}\n\nclass PersonForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      person: initialPersonAttrs\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    this.props.onSubmit(this.state.person);\n    this.setState({ person: initialPersonAttrs });\n  }\n\n  changePersonAttr(e) {\n    const attr = e.target.getAttribute('name');\n    const value = e.target.value;\n\n    this.setState({\n      person: {\n        ...this.state.person, [attr]: value\n      }\n    })\n  }\n\n  render() {\n    const {\n      first_name,\n      last_name,\n      alias\n    } = this.state.person\n\n    return (\n      <div className=\"PersonForm\">\n        <form onSubmit={ (e) => this.onSubmit(e) }>\n          <div className=\"input-field\">\n            <label>First Name</label>\n            <input\n              name=\"first_name\"\n              value={first_name}\n              onChange={ (e) => this.changePersonAttr(e) }\n            />\n          </div>\n\n          <div className=\"input-field\">\n            <label>Last Name</label>\n            <input\n              name=\"last_name\"\n              value={last_name}\n              onChange={ (e) => this.changePersonAttr(e) }\n            />\n          </div>\n\n          <div className=\"input-field\">\n            <label>Alias</label>\n            <input\n              name=\"alias\"\n              value={alias}\n              onChange={ (e) => this.changePersonAttr(e) }\n            />\n          </div>\n          <br></br>\n          <input type='submit' value=\"Create Person\" className=\"waves-effect waves-light btn\"/>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default PersonForm;\n","import React, { Component } from 'react';\n\nclass PersonList extends Component {\n  render() {\n    const { people } = this.props;\n    const items = people.map( (person, index) => {\n      const alias = person.alias ? `(${person.alias})` : \"\"\n      return <div key={index}>{`${person.first_name} ${person.last_name} ${alias}`}</div>\n    })\n\n    return (\n      <div className=\"PersonList\">\n        { items }\n      </div>\n    );\n  }\n}\n\nexport default PersonList;\n","import React, { Component } from 'react';\n\nclass NavBar extends Component {\n  render() {\n    return (\n      <nav className=\"NavBar\">\n        <div className=\"nav-wrapper\">\n          <a className=\"brand-logo\">Movie DB</a>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, { Component } from 'react';\nimport './App.css';\nimport MovieList from './MovieList';\nimport Movie from './Movie';\nimport MovieForm from './MovieForm';\nimport PersonForm from './PersonForm';\nimport PersonList from './PersonList';\nimport './../node_modules/materialize-css/dist/css/materialize.css';\nimport NavBar from './NavBar';\n\nconsole.log(process.env);\nconst API_HOST = true ? \"http://localhost:3000\" : \"https://serene-dawn-55049.herokuapp.com\"\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: [],\n      movie: null,\n      auth: null,\n      people: []\n    }\n  }\n\n  refreshAuthToken() {\n    fetch('http://localhost:3000/api/v1/auth_tokens', { method: 'POST' })\n      .then( (response) => response.json() )\n      .then( (json) => this.setState({ auth: json  }) )\n  }\n\n  componentDidMount() {\n    this.refreshAuthToken();\n\n    fetch('http://localhost:3000/api/v1/movies')\n      .then( (response) => response.json() )\n      .then( (json) => this.setState({movies: json}) )\n\n    fetch('http://localhost:3000/api/v1/people')\n      .then( (response) => response.json() )\n      .then( (json) => this.setState({people: json}) )\n  }\n\n  selectMovie(movie) {\n    this.setState({ movie: movie })\n  }\n\n  createMovie(movie) {\n    fetch('http://localhost:3000/api/v1/movies', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.state.auth.token}`\n      },\n      body: JSON.stringify({ movie })\n    })\n      .then( (response) => response.json() )\n      .then( (json) => this.setState({\n        movies: [...this.state.movies, json]\n      }))\n  }\n\n  createPerson(person) {\n    fetch('http://localhost:3000/api/v1/people', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.state.auth.token}`\n      },\n      body: JSON.stringify({ person })\n    })\n      .then( (response) => response.json() )\n      .then( (json) => this.setState({\n        people: [...this.state.people, json]\n      }))\n  }\n\n  deleteMovie(movie) {\n    fetch(`http://localhost:3000/api/v1/movies/${movie.id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.state.auth.token}`\n      }\n    })\n      .then( (response) => this.setState({\n        movies: this.state.movies.filter( (m) => m.id !== movie.id ),\n        movie: null\n      }))\n  }\n\n  render() {\n    const { movies, movie, people } = this.state;\n\n    return (\n      <div className=\"App\">\n        <NavBar />\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col s6\">\n              <div className=\"row\">\n                <div className=\"col s12\">\n                  <h4>Create a new Movie</h4>\n                  <MovieForm\n                    onSubmit={ (movieAttrs) => this.createMovie(movieAttrs) }\n                    people={people}\n                  />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col s12\">\n                  <h4>Create a new Person</h4>\n                  <PersonForm onSubmit={ (personAttrs) => this.createPerson(personAttrs) } />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col s12\">\n                  <Movie movie={movie} />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col s6\">\n              <div className=\"row\">\n                <div className=\"col s12\">\n                  <h4>Movies</h4>\n                  <MovieList\n                    movies={movies}\n                    onItemClick={ (movie) => this.selectMovie(movie) }\n                    onDeleteClick={ (movie) => this.deleteMovie(movie) }\n                    />\n                </div>\n              </div>\n\n              <div className=\"row\">\n                <div className=\"col s12\">\n                  <h4>People</h4>\n                  <PersonList\n                    people={people}\n                    />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}